import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AppProvider } from "ebp/commons/app/_components/appProvider";
import { AppLoader } from "ebp/commons/app/_components/appLoader";
import { AuthGate } from "ebp/auth/_components/authGate";
import { PrivateLayout } from "ebp/commons/app/_layouts/privateLayout";
import { PublicLayout } from "ebp/commons/app/_layouts/publicLayout";
import { ProtectedComponent } from "ebp/auth/_components/protectedComponent";
import { PropsWithChildren } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export interface RootLayoutProps extends PropsWithChildren {
  navbar: React.ReactNode;
  sidebar: React.ReactNode;

}

export default function RootLayout({
  children,
  navbar,
  sidebar,
}:RootLayoutProps) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppProvider>
          <AppLoader />
          <AuthGate>
            <ProtectedComponent
              fallback={
                <PublicLayout
                  children={children} />
                }>
              <PrivateLayout
                sidebar={sidebar}
                navbar={navbar}
                children={children} />
            </ProtectedComponent>
          </AuthGate>
        </AppProvider>
      </body>
    </html>
  );
}
